using System.Collections;using System.Collections.Generic;using UnityEngine;public class HumanBodyData : MonoBehaviour{
    //average stats of a bodyweight of 80KG
    //Mass in KG
    public List<KeyValuePair<string, float>> avg_mass_list;
    //rad in meter
    public List<KeyValuePair<string, float>> avg_rad_list;
    //height in cm
    public List<KeyValuePair<string, float>> avg_height_list;
    //vol in meter ^3
    public List<KeyValuePair<string, float>> avg_vol_list;
    //mass / rad / height / vol 
    public List<KeyValuePair<string, List<float>>> inertia_full_list;    public float cylinder_inerta_number;    public List<string> body_part_names = new List<string>()        {            "head",            "neck1",            "LeftArm",            "RightArm",            "LeftForearm",            "RightForearm",            "LeftHand",            "RightHand",            "LeftUpLeg",            "RightUpLeg",            "LeftLeg",            "RightLeg",            "LeftFoot",            "RightFoot"        };    public void Start()    {        cylinder_inerta_number = 1 / 12f;        avg_mass_list = new List<KeyValuePair<string, float>>();        avg_rad_list = new List<KeyValuePair<string, float>>();        avg_height_list = new List<KeyValuePair<string, float>>();        avg_vol_list = new List<KeyValuePair<string, float>>();        inertia_full_list = new List<KeyValuePair<string, List<float>>>();        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[0], 6.58f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[1], 1.92f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[2], 2.104f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[3], 2.104f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[4], 1.5f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[5], 1.5f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[6], 0.46f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[7], 0.46f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[8], 11.576f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[9], 11.576f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[10], 2f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[11], 2f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[12], 1.064f));        avg_mass_list.Add(new KeyValuePair<string, float>(body_part_names[13], 1.064f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[0], 0.08572f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[1], 0.09284f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[2], 0.037736f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[3], 0.037736f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[4], 0.0574f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[5], 0.0574f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[6], 0.07031f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[7], 0.07031f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[8], 0.1248f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[9], 0.1248f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[10], 0.07984f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[11], 0.07984f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[12], 0.06544f));        avg_rad_list.Add(new KeyValuePair<string, float>(body_part_names[13], 0.06544f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[0], 0.2339f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[1], 0.182f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[2], 0.353f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[3], 0.353f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[4], 0.314f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[5], 0.314f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[6], 0.182f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[7], 0.182f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[8], 0.419f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[9], 0.419f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[10], 0.423f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[11], 0.423f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[12], 0.213f));        avg_height_list.Add(new KeyValuePair<string, float>(body_part_names[13], 0.213f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[0], 0.0053993865f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[1], 0.0049282363f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[2], 0.001579197f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[3], 0.001579197f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[4], 0.0032501493f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[5], 0.0032501493f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[6], 0.0028265421f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[7], 0.0028265421f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[8], 0.0205018507f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[9], 0.0205018507f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[10], 0.008470934f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[11], 0.008470934f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[12], 0.0028656032f));        avg_vol_list.Add(new KeyValuePair<string, float>(body_part_names[13], 0.0028656032f));        for (int i = 0; i < body_part_names.Count; i++)        {            inertia_full_list.Add(new KeyValuePair<string, List<float>>(body_part_names[0], Calc_inertia(avg_rad_list[i].Value, avg_height_list[i].Value, avg_mass_list[i].Value)));        }    }    List<float> Calc_inertia(float r, float h, float m)    {
        //Debug.Log("r;  " + r + " h: " + h + " m" + m) ; 
        List<float> inertia_list = new List<float>();        inertia_list.Add(cylinder_inerta_number * m * (3 * Mathf.Pow(r, 3) + Mathf.Pow(h, 2)));        inertia_list.Add(inertia_list[0]);        inertia_list.Add(0.5f * m * Mathf.Pow(r, 2));
        //Debug.Log("inertia x: " + inertia_list[0] + " y: " + inertia_list[1] + " z: " + inertia_list[2]);   
        return inertia_list;    }}